{{- if .Values.sync.enabled }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-sync
  labels:
    app: {{ .Release.Name }}-sync
spec:
  schedule: {{ .Values.sync.schedule }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template: 
        metadata:
          labels:
            app: {{ .Release.Name }}-sync
        spec:
          restartPolicy: Never
          initContainers:
          containers:
          - image: bitnami/rclone:latest
            name: sync
            args: ["copy", "-vvv", "--no-gzip-encoding", "--check-first", "--size-only", "--low-level-retries", "20", "--transfers", "{{ .Values.sync.transfers }}", "--s3-copy-cutoff", "100M", "--use-mmap", "s3:{{ .Values.sync.bucket }}/", "/media/"]
            volumeMounts:
            - mountPath: /media/
              name: media
            - mountPath: "/.rclone.conf"
              name: sync-config
              subPath: ".rclone.conf"
            resources:
              {{- toYaml .Values.sync.resources | nindent 14 }}
            securityContext:
              runAsUser: 0
              runAsGroup: 0
          volumes:
          - name: sync-config
            configMap:
              name: {{ .Release.Name }}-sync-config
          - name: media
            persistentVolumeClaim:
              claimName: {{ template "jellyfin.fullname" . }}-media-pvc

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-sync-config
  labels:
    app: {{ .Release.Name }}
data:
  ".rclone.conf": |
    [s3]
    type = s3
    provider = Minio
    env_auth = false
    access_key_id = {{ .Values.sync.accessKey }}
    secret_access_key = {{ .Values.sync.secretKey }}
    endpoint = {{ .Values.sync.url }}

{{- end}}
