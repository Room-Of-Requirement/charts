apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "registry-sync.fullname" . }}
  labels:
    {{- include "registry-sync.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            container.apparmor.security.beta.kubernetes.io/img: unconfined
            container.seccomp.security.alpha.kubernetes.io/img: unconfined
          {{- with .Values.podAnnotations }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "registry-sync.selectorLabels" . | nindent 12 }}
        spec:
          restartPolicy: Never
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "registry-sync.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
          {{- range .Values.images }}
            - name: "{{ lower (randAlphaNum 5) }}"
              securityContext:
                {{- toYaml $.Values.securityContext | nindent 16 }}
              image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: {{ $.Values.image.pullPolicy }}
              command: ["/bin/sh", "-c"]
              args: ["img pull {{ .from }}; img tag {{ .from }} {{ .to }}; img push {{ .to }}"]
              resources:
                {{- toYaml $.Values.resources | nindent 16 }}
          {{- end}}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
